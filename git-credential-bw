#!/usr/bin/env bash

log_init() {
    [[ ! -d "$(dirname ${LOG_FILE})" ]] && mkdir -p "$(dirname ${LOG_FILE})"

    printf '=%.0s' {1..80} >> "${LOG_FILE}"
    printf "\nScript started at %s\n" "$(date)" >> "${LOG_FILE}"
}

log() {
    local level message

    level="${1}"
    message="${2}"

    echo -e "[${level}]\t${message}" >> "${LOG_FILE}"
}

get_bw_status() {
    bw_status=$(bw status 2>/dev/null | jq -R -r 'fromjson? | .status')
    echo "${bw_status}"
}

get_credentials() {
    local protocol host username password key value max_attempts attempts
    max_attempts=3
    attempts=0
    
    while IFS= read -r line; do
        key="$(echo "${line}" | cut -d'=' -f1)"
        value="$(echo "${line}" | cut -d'=' -f2)"
    
        case "${key}" in
            protocol)
                log "INFO" "Git info: ${key}=${value}"
                protocol=${value}
                ;;
            host)
                log "INFO" "Git info: ${key}=${value}"
                host=${value}
                ;;
            username)
                log "INFO" "Git info: ${key}=${value}"
                username=${value}
                ;;
            password)
                log "INFO" "Git info: ${key}=********"
                ;;
            *)
                log "INFO" "Unknown Git info: ${key}=${value}"
                ;;
        esac
    done < /dev/stdin
    
    [[ -z "${host}" ]] && { log "ERROR" "Host not provided!"; exit 1; }
    [[ -z "${username}" ]] && { log "ERROR" "Username not provided!"; exit 1; }
    
    while [[ ${attempts} -lt ${max_attempts} ]]; do 
        bw_status=$(get_bw_status)
        case "${bw_status}" in
            unauthenticated)
                log "ERROR" "Bitwarden CLI is unauthenticated!"
                echo "Please login to bitwarden." >&2
                export BW_SESSION="$(bw login --raw < /dev/tty)"
                ;;
            locked)
                log "ERROR" "Bitwarden CLI is locked!"
                echo "Please unlock bitwarden." >&2
                export BW_SESSION="$(bw unlock --raw < /dev/tty)"
                ;;
            unlocked)
                break
                ;;
        esac
        
        [[ "$(get_bw_status)" == "unlocked" ]] && break
    
        (( attempts++ ))
    done
    
    if [[ $(get_bw_status) != "unlocked" ]]; then
        log "ERROR" "Bitwarden not unlocked!"
        echo "Error: Bitward not unlocked!" >&2
        exit 1
    fi
        
    gitpass=$(bw list items --search ${host} | jq -r '.[] | select(.login.username == "'"${username}"'").fields[] | select(.name == "pat").value')
    if [[ -z "${gitpass}" ]]; then
        gitpass=$(bw list items --search ${host} | jq -r '.[] | select(.login.username == "'"${username}"'").login.password')
    fi
    
    [[ -z "${gitpass}" ]] && { log "ERROR" "Could not find password in credential store"; exit 1; }
        
    echo -e "protocol=${protocol}\nhost=${host}\nusername=${username}\npassword=${gitpass}"
}

LOG_FILE=~/tmp/logs/git-credential-bw.log

log_init

if ! which bw &>/dev/null; then
    log "ERROR" "Could not find Bitwarden CLI" >&2
    exit 1
fi

while [[ "$#" -gt 0 ]]; do
    case "${1}" in
        get)
            log "INFO" "Git action: ${1}"
            get_credentials
            shift
            ;;
        *) 
            log "INFO" "Git action: ${1}"
            shift
            ;;
    esac
done
